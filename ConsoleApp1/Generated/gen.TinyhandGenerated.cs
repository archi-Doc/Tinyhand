using System;
using System.Runtime.CompilerServices;
using Tinyhand;
using Tinyhand.IO;
using Tinyhand.Resolvers;

// <auto-generated/>
#nullable enable
#pragma warning disable CS1591

namespace Tinyhand.Formatters
{
    static class Generated
    {
        [ModuleInitializer]
        internal static void __gen__load()
        {
            GeneratedResolver.Instance.SetFormatter<XUnitTest.PrimitiveIntKeyClass>(new __gen__tf__0000());
            GeneratedResolver.Instance.SetFormatter<XUnitTest.PrimitiveStringKeyClass>(new __gen__tf__0001());
            GeneratedResolver.Instance.SetFormatter<ConsoleApp1.TestClass>(new __gen__tf__0002());
        }

        class __gen__tf__0000: ITinyhandFormatter<XUnitTest.PrimitiveIntKeyClass>
        {
            public void Serialize(ref TinyhandWriter w, XUnitTest.PrimitiveIntKeyClass? v, TinyhandSerializerOptions o)
            {
                if (v == null) w.WriteNil();
                else v.Serialize(ref w, o);
            }
            public XUnitTest.PrimitiveIntKeyClass? Deserialize(ref TinyhandReader r, TinyhandSerializerOptions o)
            {
                if (r.TryReadNil()) return default;
                var v = new XUnitTest.PrimitiveIntKeyClass();
                v.Deserialize(ref r, o);
                return v;
            }
            public XUnitTest.PrimitiveIntKeyClass Reconstruct(TinyhandSerializerOptions o)
            {
                var v = new XUnitTest.PrimitiveIntKeyClass();
                v.Reconstruct(o);
                return v;
            }
        }
        class __gen__tf__0001: ITinyhandFormatter<XUnitTest.PrimitiveStringKeyClass>
        {
            public void Serialize(ref TinyhandWriter w, XUnitTest.PrimitiveStringKeyClass? v, TinyhandSerializerOptions o)
            {
                if (v == null) w.WriteNil();
                else v.Serialize(ref w, o);
            }
            public XUnitTest.PrimitiveStringKeyClass? Deserialize(ref TinyhandReader r, TinyhandSerializerOptions o)
            {
                if (r.TryReadNil()) return default;
                var v = new XUnitTest.PrimitiveStringKeyClass();
                v.Deserialize(ref r, o);
                return v;
            }
            public XUnitTest.PrimitiveStringKeyClass Reconstruct(TinyhandSerializerOptions o)
            {
                var v = new XUnitTest.PrimitiveStringKeyClass();
                v.Reconstruct(o);
                return v;
            }
        }
        class __gen__tf__0002: ITinyhandFormatter<ConsoleApp1.TestClass>
        {
            public void Serialize(ref TinyhandWriter w, ConsoleApp1.TestClass? v, TinyhandSerializerOptions o)
            {
                if (v == null) w.WriteNil();
                else v.Serialize(ref w, o);
            }
            public ConsoleApp1.TestClass? Deserialize(ref TinyhandReader r, TinyhandSerializerOptions o)
            {
                if (r.TryReadNil()) return default;
                var v = new ConsoleApp1.TestClass();
                v.Deserialize(ref r, o);
                return v;
            }
            public ConsoleApp1.TestClass Reconstruct(TinyhandSerializerOptions o)
            {
                var v = new ConsoleApp1.TestClass();
                v.Reconstruct(o);
                return v;
            }
        }
    }
}
