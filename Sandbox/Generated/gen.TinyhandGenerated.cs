// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using System.Runtime.CompilerServices;
using Tinyhand;
using Tinyhand.IO;
using Tinyhand.Resolvers;

#nullable enable
#pragma warning disable CS0162
#pragma warning disable CS1591
#pragma warning disable CS8774

namespace Tinyhand.Formatters
{
    static class Generated
    {
        [ModuleInitializer]
        internal static void __gen__load()
        {
            GeneratedResolver.Instance.SetFormatter<Sandbox.EmptyClass>(new __gen__tf__0000());
            GeneratedResolver.Instance.SetFormatter<Sandbox.ReconstructTestClass>(new __gen__tf__0001());
            GeneratedResolver.Instance.SetFormatter<Sandbox.DefaultTestClass>(new __gen__tf__0002());
            GeneratedResolver.Instance.SetFormatter<Sandbox.StringEmptyClass>(new __gen__tf__0003());
            GeneratedResolver.Instance.SetFormatter<Sandbox.SampleCallback>(new __gen__tf__0004());
            GeneratedResolver.Instance.SetFormatter<Sandbox.GenericsTestClass2<int>>(new __gen__tf__0005());
            GeneratedResolver.Instance.SetFormatter<Sandbox.GenericsTestClass<string>>(new __gen__tf__0006());
            GeneratedResolver.Instance.SetFormatter<Sandbox.GenericsTestClass<long>>(new __gen__tf__0007());
        }

        class __gen__tf__0000: ITinyhandFormatter<Sandbox.EmptyClass>
        {
            public void Serialize(ref TinyhandWriter w, Sandbox.EmptyClass? v, TinyhandSerializerOptions o)
            {
                if (v == null) w.WriteNil();
                else v.Serialize(ref w, o);
            }
            public Sandbox.EmptyClass? Deserialize(ref TinyhandReader r, TinyhandSerializerOptions o)
            {
                if (r.TryReadNil()) return default;
                var v = new Sandbox.EmptyClass();
                v.Deserialize(ref r, o);
                return v;
            }
            public Sandbox.EmptyClass Reconstruct(TinyhandSerializerOptions o)
            {
                var v = new Sandbox.EmptyClass();
                v.Reconstruct(o);
                return v;
            }
        }
        class __gen__tf__0001: ITinyhandFormatter<Sandbox.ReconstructTestClass>
        {
            public void Serialize(ref TinyhandWriter w, Sandbox.ReconstructTestClass? v, TinyhandSerializerOptions o)
            {
                if (v == null) w.WriteNil();
                else v.Serialize(ref w, o);
            }
            public Sandbox.ReconstructTestClass? Deserialize(ref TinyhandReader r, TinyhandSerializerOptions o)
            {
                if (r.TryReadNil()) return default;
                var v = new Sandbox.ReconstructTestClass();
                v.Deserialize(ref r, o);
                return v;
            }
            public Sandbox.ReconstructTestClass Reconstruct(TinyhandSerializerOptions o)
            {
                var v = new Sandbox.ReconstructTestClass();
                v.Reconstruct(o);
                return v;
            }
        }
        class __gen__tf__0002: ITinyhandFormatter<Sandbox.DefaultTestClass>
        {
            public void Serialize(ref TinyhandWriter w, Sandbox.DefaultTestClass? v, TinyhandSerializerOptions o)
            {
                if (v == null) w.WriteNil();
                else v.Serialize(ref w, o);
            }
            public Sandbox.DefaultTestClass? Deserialize(ref TinyhandReader r, TinyhandSerializerOptions o)
            {
                if (r.TryReadNil()) return default;
                var v = new Sandbox.DefaultTestClass();
                v.Deserialize(ref r, o);
                return v;
            }
            public Sandbox.DefaultTestClass Reconstruct(TinyhandSerializerOptions o)
            {
                var v = new Sandbox.DefaultTestClass();
                v.Reconstruct(o);
                return v;
            }
        }
        class __gen__tf__0003: ITinyhandFormatter<Sandbox.StringEmptyClass>
        {
            public void Serialize(ref TinyhandWriter w, Sandbox.StringEmptyClass? v, TinyhandSerializerOptions o)
            {
                if (v == null) w.WriteNil();
                else v.Serialize(ref w, o);
            }
            public Sandbox.StringEmptyClass? Deserialize(ref TinyhandReader r, TinyhandSerializerOptions o)
            {
                if (r.TryReadNil()) return default;
                var v = new Sandbox.StringEmptyClass();
                v.Deserialize(ref r, o);
                return v;
            }
            public Sandbox.StringEmptyClass Reconstruct(TinyhandSerializerOptions o)
            {
                var v = new Sandbox.StringEmptyClass();
                v.Reconstruct(o);
                return v;
            }
        }
        class __gen__tf__0004: ITinyhandFormatter<Sandbox.SampleCallback>
        {
            public void Serialize(ref TinyhandWriter w, Sandbox.SampleCallback? v, TinyhandSerializerOptions o)
            {
                if (v == null) w.WriteNil();
                else v.Serialize(ref w, o);
            }
            public Sandbox.SampleCallback? Deserialize(ref TinyhandReader r, TinyhandSerializerOptions o)
            {
                if (r.TryReadNil()) return default;
                var v = new Sandbox.SampleCallback();
                v.Deserialize(ref r, o);
                return v;
            }
            public Sandbox.SampleCallback Reconstruct(TinyhandSerializerOptions o)
            {
                var v = new Sandbox.SampleCallback();
                v.Reconstruct(o);
                return v;
            }
        }
        class __gen__tf__0005: ITinyhandFormatter<Sandbox.GenericsTestClass2<int>>
        {
            public void Serialize(ref TinyhandWriter w, Sandbox.GenericsTestClass2<int>? v, TinyhandSerializerOptions o) => Sandbox.GenericsTestClass2<int>.Serialize(ref w, v, o);
            public Sandbox.GenericsTestClass2<int>? Deserialize(ref TinyhandReader r, TinyhandSerializerOptions o) => Sandbox.GenericsTestClass2<int>.Deserialize(ref r, o);
            public Sandbox.GenericsTestClass2<int> Reconstruct(TinyhandSerializerOptions o) => Sandbox.GenericsTestClass2<int>.Reconstruct(o);
        }
        class __gen__tf__0006: ITinyhandFormatter<Sandbox.GenericsTestClass<string>>
        {
            public void Serialize(ref TinyhandWriter w, Sandbox.GenericsTestClass<string>? v, TinyhandSerializerOptions o) => Sandbox.GenericsTestClass<string>.Serialize(ref w, v, o);
            public Sandbox.GenericsTestClass<string>? Deserialize(ref TinyhandReader r, TinyhandSerializerOptions o) => Sandbox.GenericsTestClass<string>.Deserialize(ref r, o);
            public Sandbox.GenericsTestClass<string> Reconstruct(TinyhandSerializerOptions o) => Sandbox.GenericsTestClass<string>.Reconstruct(o);
        }
        class __gen__tf__0007: ITinyhandFormatter<Sandbox.GenericsTestClass<long>>
        {
            public void Serialize(ref TinyhandWriter w, Sandbox.GenericsTestClass<long>? v, TinyhandSerializerOptions o) => Sandbox.GenericsTestClass<long>.Serialize(ref w, v, o);
            public Sandbox.GenericsTestClass<long>? Deserialize(ref TinyhandReader r, TinyhandSerializerOptions o) => Sandbox.GenericsTestClass<long>.Deserialize2(ref r, o);
            public Sandbox.GenericsTestClass<long> Reconstruct(TinyhandSerializerOptions o) => Sandbox.GenericsTestClass<long>.Reconstruct2(o);
        }
    }
}

namespace Tinyhand
{
    public static class TinyhandModule
    {
        private static bool Initialized;
        public static void Initialize()
        {
            if (TinyhandModule.Initialized) return;
            TinyhandModule.Initialized = true;
        }
    }
}
